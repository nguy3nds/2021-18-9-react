{"version":3,"sources":["image/react-router-1.png","components/What.js","image/imgpsh_mobile_save.jpg","components/Why.js","components/How.js","components/Tung.js","App.js","reportWebVitals.js","index.js"],"names":["What","style","width","margin","marginTop","src","imgReactRouter1","alt","Why","nexflix","How","Tung","App","DivContainer","Rotate","className","to","path","gradient","keyframes","styled","div","rotate360","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAAe,G,MAAA,IAA0B,4C,OCG1B,SAASA,IACtB,OACE,sBAAKC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,UAApC,UACE,wDACA,8BACE,6CADF,kDAGA,4LAKA,8CACA,uWAOA,qBAAKF,MAAO,CAAEG,UAAW,QAAUC,IAAKC,EAAiBC,IAAI,WCvBpD,UAA0B,+CCE1B,SAASC,IACtB,OACE,gCACE,qDACA,+BACE,+BACE,uDACA,ylBAYF,+BACE,sEACA,6nBAWA,qBAAKH,IAAKI,EAASF,IAAI,QAEzB,uBACA,6BACE,wECtCK,SAASG,IACtB,OACE,gCACE,2DACA,+BACE,+BACE,oCADF,yCAGA,+BACE,sCADF,oCAIF,4CACA,+BACE,+BACE,yDACA,yEACA,4EAEF,+BACE,wDACA,gGAEF,4GCvBO,SAASC,IACtB,OACE,gCACE,wEACA,+BACE,+BACE,kDADF,+OAMA,uBACA,qCACK,gDADL,qK,oBCAO,SAASC,IACtB,OACE,cAAC,IAAD,UACE,eAACC,EAAD,WACE,uDACA,cAACC,EAAD,UACE,qBACET,IATV,6KAUUU,UAAU,WACVR,IAAI,OACJN,MAAO,CAAEC,MAAO,YAGpB,8BACE,qBAAIa,UAAU,OAAd,UACE,oBAAIA,UAAU,sBAAd,SACE,cAAC,IAAD,CAAMC,GAAG,UAAT,qCAEF,oBAAID,UAAU,sBAAd,SACE,cAAC,IAAD,CAAMC,GAAG,OAAT,yCAEF,oBAAID,UAAU,sBAAd,SACE,cAAC,IAAD,CAAMC,GAAG,OAAT,mCAEF,oBAAID,UAAU,sBAAd,SACE,cAAC,IAAD,CAAMC,GAAG,QAAT,2DAKN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,cAACjB,EAAD,MAEF,cAAC,IAAD,CAAOiB,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAACN,EAAD,cAQZ,IAAMO,EAAWC,YAAH,8KAYRN,EAAeO,IAAOC,IAAV,wRAOHH,GAITI,EAAYH,YAAH,wHAUTL,EAASM,IAAOC,IAAV,wIAEGC,GCpFAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.98001193.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-router-1.f256217a.png\";","import React from \"react\";\nimport imgReactRouter1 from \"../image/react-router-1.png\";\n\nexport default function What() {\n  return (\n    <div style={{ width: \"80%\", margin: \"0 auto\" }}>\n      <h4>What is react router ?</h4>\n      <p>\n        <b>React Router</b> is a standard library for routing in React.\n      </p>\n      <p>\n        It enables the navigation among views of various components in a React\n        Application, allows changing the browser URL, and keeps the UI in sync\n        with the URL.\n      </p>\n      <h3>What is SPA?</h3>\n      <p>\n        SPA (Single-page application) is a web application or website that\n        interacts with the user by dynamically rewriting the current web page\n        with new data from the web server, instead of the default method of a\n        web browser loading entire new pages. The goal is faster transitions\n        that make the website feel more like a native app.\n      </p>\n      <img style={{ marginTop: \"10px\" }} src={imgReactRouter1} alt=\"abc\" />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/imgpsh_mobile_save.5038dec2.jpg\";","import nexflix from \"../image/imgpsh_mobile_save.jpg\";\n\nexport default function Why() {\n  return (\n    <div>\n      <h3>Disadvantage of SPA</h3>\n      <ul>\n        <li>\n          <b>1. Slower initial load</b>\n          <p>\n            App launch: This occurs when the app is initially loaded by entering\n            the URL in the browser or by clicking on an email link. “App launch”\n            mode is typically slow, as the application (JS/CSS) needs to be\n            downloaded and booted before doing the work to render the page.\n            Subsequent: This occurs when the app has already been loaded and the\n            page is visited by clicking on a link within the app. “Subsequent”\n            mode is typically fast because the application is already downloaded\n            and booted, and we just need to fetch new data for the page and\n            render it.\n          </p>\n        </li>\n        <li>\n          <b>2. Won’t work without javascript</b>\n          <p>\n            If a site is “client-side rendered” (CSR), that means JavaScript is\n            doing the data fetching and creating the DOM and all that. If we’re\n            talking about websites “working” or not with or without JavaScript,\n            a site that is client-side rendered will 100% fail without\n            JavaScript. It is sort of the opposite of “server-side rendered”\n            (SSR) in which the document comes down as HTML right from the\n            server. SSR is almost certainly faster for a first-loading\n            experience. CSR, typically, is faster to move around the site after\n            loading (think “single page app,” or SPA).\n          </p>\n          <img src={nexflix} alt=\"\" />\n        </li>\n        <br />\n        <li>\n          <b>3. SPA is not optimized for SEO</b>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","export default function How() {\n  return (\n    <div>\n      <h3>Difference of SPA and MPA</h3>\n      <ul>\n        <li>\n          <b>SPA</b> No page reload required during use\n        </li>\n        <li>\n          <b>MPA: </b> Reload the page during use\n        </li>\n      </ul>\n      <p>About speed</p>\n      <ul>\n        <li>\n          <b>SPA is faster when using</b>\n          <p>Most resources are loaded the first time</p>\n          <p>The page only loads new data when needed</p>\n        </li>\n        <li>\n          <b>MPA is slower when used</b>\n          <p>Always reload the entire page when accessing and redirecting</p>\n        </li>\n        <li>\n          Example websites using SPA: Google, Facebook, Gmail, Youtube, Shopee\n        </li>\n      </ul>\n    </div>\n  );\n}\n","export default function Tung() {\n  return (\n    <div>\n      <h3>Front-end Routing and Back-end Routing</h3>\n      <ul>\n        <li>\n          <b>Front-end routing</b> is handled from the browser, it allows client\n          to update the page content and the url. However the page will appear\n          faster, because only the contents that need to be updated will be\n          updated, not the entire page or any other contents.\n        </li>\n        <br />\n        <li>\n          In <b>backend routing</b>, server will rely on HTTP methods(GET,\n          POST,PUT) and the path of the URL to handle request and send back\n          corresponding codes ( 200,404,500...) to users.\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport What from \"./components/What.js\";\nimport How from \"./components/Why\";\nimport Why from \"./components/How\";\nimport Tung from \"./components/Tung\";\n\nimport styled, { keyframes } from \"styled-components\";\nconst logo =\n  \"https://lh6.googleusercontent.com/m9VlRb9FHZcqWTBz0msD2FZGpSQs84aAOwwniApLbL1oZWSDJsg4opq2uc81QzPWDtx5QJ2DeO12CFeol6vqJXcSOyp10LGoOW3K_wXIp3UDuQt1XhXE5KeUC8Epkj2hO51asKYe\";\n\nexport default function App() {\n  return (\n    <Router>\n      <DivContainer>\n        <h1>React Router Overview</h1>\n        <Rotate>\n          <img\n            src={logo}\n            className=\"App-logo\"\n            alt=\"logo\"\n            style={{ width: \"50px\" }}\n          />\n        </Rotate>\n        <nav>\n          <ul className=\"menu\">\n            <li className=\"menu-item has-child\">\n              <Link to=\"/Nguyen\">What is react router?</Link>\n            </li>\n            <li className=\"menu-item has-child\">\n              <Link to=\"/Mai\">Difference of SPA and MPA</Link>\n            </li>\n            <li className=\"menu-item has-child\">\n              <Link to=\"/Nam\">Disadvantage of SPA</Link>\n            </li>\n            <li className=\"menu-item has-child\">\n              <Link to=\"/Tung\">Front-end Routing and Back-end Routing</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route path=\"/Nguyen\">\n            <What />\n          </Route>\n          <Route path=\"/Mai\">\n            <Why />\n          </Route>\n          <Route path=\"/Nam\">\n            <How />\n          </Route>\n          <Route path=\"/Tung\">\n            <Tung />\n          </Route>\n        </Switch>\n      </DivContainer>\n    </Router>\n  );\n}\n\nconst gradient = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\n\nconst DivContainer = styled.div`\n  padding-top: 30px;\n  text-align: center;\n  min-height: 100vh;\n  color: #eee;\n  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n  background-size: 400% 400%;\n  animation: ${gradient} 15s ease infinite;\n  padding-bottom: 100px;\n`;\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Rotate = styled.div`\n  display: inline-block;\n  animation: ${rotate360} 2s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}